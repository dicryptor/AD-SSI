/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.whitepagecreation.wifiscanner;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import android.content.Context;
import android.content.IntentFilter;
import android.net.wifi.ScanResult;
import android.net.wifi.WifiManager;
import android.telephony.TelephonyManager;

@Kroll.module(name="Wifiscanner", id="com.whitepagecreation.wifiscanner")
public class WifiscannerModule extends KrollModule
{
	public static WifiManager wifi;
	//private WifiScanEventListener wifiScanEventListener;
	// Standard Debugging variables
	private static final String LCAT = "WifiscannerModule";
	private static final boolean DBG = TiConfig.LOGD;
	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public WifiscannerModule()
	{
		super();
		initWifiManager();
	}

	private static void initWifiManager() {
		wifi = (WifiManager) TiApplication.getInstance()
				.getSystemService(Context.WIFI_SERVICE);

	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
	}

	// Methods
	@Kroll.method
	public String scanWifi()
	{
		//Context ctx = TiApplication.getInstance().getApplicationContext();
		//IntentFilter scanIntent = new IntentFilter();
		//scanIntent.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION);
		//wifiScanEventListener = new WifiScanEventListener(ctx, onScanComplete, getKrollObject());

		wifi.startScan();
		String wifis = "";

		for (android.net.wifi.ScanResult res : wifi.getScanResults()) {
			wifis += res.SSID + "|" + res.BSSID + ",";
		}
		return wifis;

	}

	@Kroll.method
	public String getDeviceID()
	{

		TelephonyManager telephonyManager = (TelephonyManager) TiApplication.getInstance().getSystemService(Context.TELEPHONY_SERVICE);

		return telephonyManager.getDeviceId();

	}
}

